{"paragraphs": [{"text": "%livy3.pyspark\nimport pyModeS as pms\n\nimport pandas as pd\n\nfrom preprocess.decoder import Decoder", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\n# Lectura del fichero de despegues", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\ndatos  = pd.read_csv('test.csv', sep=';')\n\ndatos = datos.drop(columns=['Unnamed: 2'])\n\ndatos", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\n# Los datos correspenden a la lectura que ha realizado la antena durante 1 minuto.\n\n# \n\n# Son poco m\u00e1s de 8k filas, y la informacion de cada despeque se encuentra en la columna message, formateada en base 64.", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\n# Almacenaremos los datos en diccionarios.", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\nhola = pms.tell(Decoder.base64toHex(datos.loc[0, \"message\"]))", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\nDecoder.processMessage(datos.loc[0, \"message\"], datos.loc[0,\"ts_kafka\"])", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\n# ModeS supports the decoding of following types of messages:\n\n# \n\n# DF4 / DF20: Altitude code\n\n# \n\n# DF5 / DF21: Identity code (squawk code)\n\n# \n\n# DF17 / DF18: Automatic Dependent Surveillance-Broadcast (ADS-B)\n\n# \n\n# TC=1-4 / BDS 0,8: Aircraft identification and category\n\n# \n\n# TC=5-8 / BDS 0,6: Surface position\n\n# \n\n# TC=9-18 / BDS 0,5: Airborne position\n\n# \n\n# TC=19 / BDS 0,9: Airborne velocity\n\n# \n\n# TC=28 / BDS 6,1: Airborne status [to be implemented]\n\n# \n\n# TC=29 / BDS 6,2: Target state and status information [to be implemented]\n\n# \n\n# TC=31 / BDS 6,5: Aircraft operational status [to be implemented]\n\n# \n\n# DF20 / DF21: Mode-S Comm-B messages\n\n# \n\n# BDS 1,0: Data link capability report\n\n# \n\n# BDS 1,7: Common usage GICB capability report\n\n# \n\n# BDS 2,0: Aircraft identification\n\n# \n\n# BDS 3,0: ACAS active resolution advisory\n\n# \n\n# BDS 4,0: Selected vertical intention\n\n# \n\n# BDS 4,4: Meteorological routine air report (experimental)\n\n# \n\n# BDS 4,5: Meteorological hazard report (experimental)\n\n# \n\n# BDS 5,0: Track and turn report\n\n# \n\n# BDS 6,0: Heading and speed report", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\ndf = datos.copy()\n\ndf_resultado = df.apply(lambda x: Decoder.processMessage(x[\"message\"], x[\"ts_kafka\"]), axis=1).apply(pd.Series)\n\ndf_resultado", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\ndf_resultado.columns", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}, {"text": "%livy3.pyspark\nfrom airstrip.airplane import Airplane\n\n\n\ndf_resultado['Timestamp (date)'] = pd.to_datetime(df_resultado['Timestamp (date)'])\n\n\n\nairplanes = {}\n\n\n\n# Iteramos sobre los mensajes del DataFrame\n\nfor _, row in df_resultado.iterrows():\n\n    icao = row.get(\"ICAO\")\n\n    if not icao:\n\n        continue\n\n    if icao not in airplanes:\n\n        airplanes[icao] = Airplane(icao)\n\n    airplanes[icao].add_message(row)\n\n\n\n# Obtenemos el timestamp final (por ahora asumiremos que es el m\u00e1ximo de todos los mensajes)\n\nfinal_timestamp = df_resultado['Timestamp (date)'].max()\n\n\n\n# Mostrar los resultados\n\nfor icao, airplane in airplanes.items():\n\n    print(f\"ICAO: {icao}\")\n\n    print(f\"  Tiempo total en tierra: {airplane.total_ground_time} segundos\")\n\n    print(f\"  Tiempo total en vuelo: {airplane.total_airborne_time} segundos\")\n\n    print(\"----\")", "config": {"editorSetting": {"language": "python", "editOnDblClick": false, "completionSupport": true, "completionKey": "TAB"}, "colWidth": 12, "editorMode": "ace/mode/python", "fontSize": 9, "results": {}, "enabled": true}, "settings": {"params": {}, "forms": {}}, "results": {"code": "SUCCESS", "msg": []}, "apps": [], "status": "FINISHED", "progressUpdateIntervalMs": 500, "focus": true}], "name": "converted", "id": "", "noteParams": {}, "noteForms": {}, "angularObjects": {"md:shared_process": [], "anaconda:shared_process": [], "angular:shared_process": [], "jdbc:shared_process": []}, "config": {"isZeppelinNotebookCronEnable": true, "looknfeel": "default", "personalizedMode": "false"}, "info": {}}